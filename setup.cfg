# This file is part of the Promptly.
#
# Copyright (C) 2023 Serghei Iakovlev <egrep@protonmail.ch>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

# Project-wide configuration file, can be used for package metadata and other
# tool configurations.

[metadata]
license_files = LICENSE
description_file = README.rst
long_description_content_type = text/x-rst

[tool:pytest]
addopts =
    --verbose
    --doctest-modules
    --durations=25
    --color=no

markers = serial

[pylint.BASIC]
# Good variable names which should always be accepted, separated by a comma.
good-names = i,j,k,n,ex,rv,p,Run,_

[pylint.MAIN]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs = 0

[pylint.LOGGING]
# The type of string formatting that logging methods do.
# 'old' means using % formatting, 'new' is for '{}' formatting.
logging-format-style = new

[pylint.'MESSAGES CONTROL']
# Disable the message, report, category or checker with the given id(s).
# TODO: Sortout with these reports later
disable =
    fixme,
    import-outside-toplevel,
    not-callable,
    too-few-public-methods,
    wrong-import-position,

[flake8]
# Set the maximum allowed length for a line of code
max-line-length = 79

# Set the maximum allowed cyclomatic complexity for a function or method
max-complexity = 10

# When set to True, this option instructs Flake8 to display a summary of
# warnings and errors grouped by type at the end of its output.
statistics = True

# When set to True, this option causes Flake8 to display the offending line
# of code for each warning or error, providing better context for understanding
# and fixing the issues.
show-source = True

# List of files and directories to exclude from linting
exclude =
    .eggs,
    .git,
    .pytest_cache,
    .venv,
    __pycache__,
    build,
    dist,
    node_modules

# List of modules to be considered as local
application-import-names =
    promptly,
    tests

# Set the import order style to follow Smarkets' style
import-order-style = smarkets

[coverage:report]
# Set the number of decimal places in coverage percentage
precision = 2

# Show lines that were not executed
show_missing = True

[coverage:html]
# Directory for the HTML format report
directory = htmlcov

[coverage:xml]
# Filename for the XML format report
output = coverage.xml

[coverage:run]
# Enable branch coverage (default: False)
branch = True

# Run tests in parallel (useful when using CI/CD)
parallel = True

# Filename for storing coverage data
data_file = coverage.db

# Omit specified files or directories from the report
omit =
    */.venv/*
    */__pycache__/*
    */migrations/*
    */site-packages/*
    */tests/*
    */node_modules/*
