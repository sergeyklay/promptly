# This file is part of the Promptly.
#
# Copyright (C) 2023 Serghei Iakovlev <egrep@protonmail.ch>
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

# Project-wide configuration file, can be used for package metadata and other
# tool configurations.

[metadata]
name = promptly
version = attr: promptly.__version__
author = Serghei Iakovlev
author_email = egrep@protonmail.ch
maintainer = Serghei Iakovlev
maintainer_email = egrep@protonmail.ch
description = A customizable ChatGPT API interface for OpenAPI models.
keywords = ai, chat, chatbot, chatgpt, gpt, gpt-3, gpt-4, llm, openai, 'prompt injection', prompt, text generation
license = MIT
url = https://promptly.readthedocs.io
project_urls =
    Documentation = https://promptly.readthedocs.io/en/latest
    Changelog = https://promptly.readthedocs.io/en/latest/changelog.html
    Source Code = https://github.com/sergeyklay/promptly
    Bug Tracker = https://github.com/sergeyklay/promptly/issues
classifiers =
    Development Status :: 2 - Pre-Alpha
    Environment :: Web Environment
    Intended Audience :: Developers
    Intended Audience :: Information Technology
    License :: OSI Approved :: MIT
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Communications :: Chat
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Utilities

[options]
packages = find:
exclude =
    tests
    tests.*
include_package_data = True
zip_safe = False
install_requires =
    Flask-Migrate>=4.0.5
    Flask-SQLAlchemy>=3.1.1
    Flask>=3.0.0
    SQLAlchemy>=2.0.21
    Werkzeug>=3.0.0
    alembic>=1.12.0
    backoff>=2.2.1
    openai>=0.28.1
    python-dotenv>=1.0.0
python_requires = >=3.10, <4

[options.extras_require]
testing =
    Faker>=19.11.0
    coverage[toml]>=7.3.2
    factory-boy>=3.3.0
    flake8-blind-except>=0.2.0
    flake8-import-order>=0.18.1
    flake8>=6.1.0
    pylint>=3.0.1
    pytest-mock>=3.11.1
    pytest>=7.4.2
docs =
    sphinx>=7.2.6

license_files = LICENSE
description_file = README.rst

[tool:pytest]
addopts =
    --verbose
    --doctest-modules
    --durations=25
    --color=no

markers = serial

[pylint.BASIC]
# Good variable names which should always be accepted, separated by a comma.
good-names = i,j,k,n,ex,rv,p,Run,_

[pylint.MAIN]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs = 0

[pylint.LOGGING]
# The type of string formatting that logging methods do.
# 'old' means using % formatting, 'new' is for '{}' formatting.
logging-format-style = new

[pylint.'MESSAGES CONTROL']
# Disable the message, report, category or checker with the given id(s).
# TODO: Sortout with these reports later
disable =
    fixme,
    import-outside-toplevel,
    not-callable,
    too-few-public-methods,
    wrong-import-position,

[flake8]
# Set the maximum allowed length for a line of code
max-line-length = 79

# Set the maximum allowed cyclomatic complexity for a function or method
max-complexity = 10

# When set to True, this option instructs Flake8 to display a summary of
# warnings and errors grouped by type at the end of its output.
statistics = True

# When set to True, this option causes Flake8 to display the offending line
# of code for each warning or error, providing better context for understanding
# and fixing the issues.
show-source = True

# List of files and directories to exclude from linting
exclude =
    .eggs,
    .git,
    .pytest_cache,
    .venv,
    __pycache__,
    build,
    dist,
    node_modules

# List of modules to be considered as local
application-import-names =
    promptly,
    tests

# Set the import order style to follow Smarkets' style
import-order-style = smarkets

[coverage:report]
# Set the number of decimal places in coverage percentage
precision = 2

# Show lines that were not executed
show_missing = True

[coverage:html]
# Directory for the HTML format report
directory = htmlcov

[coverage:xml]
# Filename for the XML format report
output = coverage.xml

[coverage:run]
# Enable branch coverage (default: False)
branch = True

# Run tests in parallel (useful when using CI/CD)
parallel = True

# Filename for storing coverage data
data_file = coverage.db

# Omit specified files or directories from the report
omit =
    */.venv/*
    */__pycache__/*
    */migrations/*
    */site-packages/*
    */tests/*
    */node_modules/*
